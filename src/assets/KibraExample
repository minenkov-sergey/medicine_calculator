const AppContext = React.createContext({
	store:null,
  handleBtnPress:()=>{}
});

export const useAppContext = ()=>{
return useContext(AppContext)
};

export const AppContextProvider = ()=>{
	const [state,setState]=useState({
  	store:null
  })
	const handleBtnPress = (data)=>{
  //do something
  };
  
 
	const storeData = async (data, storeAs = false) => {
		if (!data || !storeAs) return false;
		let storeData = cloneDeep(state.store);
		if (!component) {
			//if no component name provided then store key:val to the root of appData
			storeData[storeAs] = data;
		} else {
			//check if component is present and write value into it
			if (storeData.components.hasOwnProperty(component)) {
				storeData.components[component][storeAs] = data;
			} else {
				//create component and store value
				storeData.components[component] = { [storeAs]: data };
			}
		}

		//set updated store to the state
		await setState((prevState) => {
			return {
				...prevState,
				storeData,
			};
		});
		return true;
	};
  return(
  	<AppContext.Provider
    value={
    	{
      handleBtnPress,
      store:state.store
      
      }
    }
    
    >
    
    {props.children}
    
    </AppContext.Provider>
  )
} 




const AppDura = ()=>{

const [sex, setSex] = useState();
    const handleSex = (event, newSex) => {
        setSex(newSex);
    }
    
 const {handleBtnPress,store}=useAppContext()
 
 
 
 useEffect(()=>{
 	//do something on store change
  
 },[store["sex"]])
 
 
 
    
 
    
 
	
return(
<AppContextProvider>
 <div>
      <span className={styles.header}>Пол</span>
            <div className={styles.buttons}>
                <ToggleButtonGroup
                    value={sex}
                    exclusive
                    onChange={handleSex}
                    aria-label="sex"
                    className={styles.buttonsGroup}
                    size='small'>
                    <ToggleButton value="male" className={styles.button}>Мужчина</ToggleButton>
                    <ToggleButton value="female" className={styles.button}>Женщина</ToggleButton>
                </ToggleButtonGroup>
            </div>
    </div>
    </AppContextProvider>
)
};



ReactDOM.render(<AppDura />, document.querySelector("#app"))
